- name: Install dependencies packages.
  apt: name={{ item }} state=present
  with_items:
    - python-pip
    - python-virtualenv

- name: Check if docker is installed
  command: bash -c "docker -v > /dev/null; echo $?;"
  register: docker_installed

- name: Download installer
  get_url: url=https://get.docker.com/ dest=/tmp/docker_install.sh validate_certs=no
  register: get_docker
  when: docker_installed.stdout != "0"

- name: Run installer
  command: '/bin/sh /tmp/docker_install.sh'
  when: get_docker|changed and docker_installed != "0"

- name: Change ufw forward policy to ACCEPT
  command: sed -i 's/DEFAULT_FORWARD_POLICY="DROP"/DEFAULT_FORWARD_POLICY="ACCEPT"/g' /etc/default/ufw
  when: docker_listen_tcp == True
  tags: [docker]

- name: Reload ufw
  command: ufw reload
  when: docker_listen_tcp == True
  tags: [docker]

- name: Allow incomming tcp traffic on {{docker_listen_port}}
  command: ufw allow {{docker_listen_port}}/tcp
  when: docker_listen_tcp == True
  tags: [docker]

- name: Check if /etc/init exists
  stat: path=/etc/init/
  register: etc_init
  tags: [docker]

- name: Docker upstart default config file
  template: src=docker-defaults.j2 dest=/etc/default/docker
  when: etc_init.stat.exists == true
  notify:
    - Restart Docker
  tags: [docker]

- name: Check if systemd exists
  stat: path=/usr/lib/systemd/system/
  register: systemd_check
  tags: [docker]

#- name: Docker systemd default config file
#  template: src=docker-sysconfig.j2 dest=/etc/sysconfig/docker
#  when: systemd_check.stat.exists == true
#  notify:
#    - Restart Docker
#  tags: [docker]

- name: Docker systemd file
  template: src=docker-service.j2 dest=/lib/systemd/system/docker.service backup=yes
  when: systemd_check.stat.exists == true
  notify:
    - Restart Docker
  tags: [docker]